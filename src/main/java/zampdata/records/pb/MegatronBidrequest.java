// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: megatron_bidrequest.proto

package zampdata.records.pb;

public final class MegatronBidrequest {
  private MegatronBidrequest() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RtbLogOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .megatron.RtbLog.Log logs = 1;
    /**
     * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
     */
    java.util.List<zampdata.records.pb.MegatronBidrequest.RtbLog.Log> 
        getLogsList();
    /**
     * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
     */
    zampdata.records.pb.MegatronBidrequest.RtbLog.Log getLogs(int index);
    /**
     * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
     */
    int getLogsCount();
    /**
     * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
     */
    java.util.List<? extends zampdata.records.pb.MegatronBidrequest.RtbLog.LogOrBuilder> 
        getLogsOrBuilderList();
    /**
     * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
     */
    zampdata.records.pb.MegatronBidrequest.RtbLog.LogOrBuilder getLogsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code megatron.RtbLog}
   */
  public static final class RtbLog extends
      com.google.protobuf.GeneratedMessage
      implements RtbLogOrBuilder {
    // Use RtbLog.newBuilder() to construct.
    private RtbLog(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RtbLog(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RtbLog defaultInstance;
    public static RtbLog getDefaultInstance() {
      return defaultInstance;
    }

    public RtbLog getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RtbLog(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                logs_ = new java.util.ArrayList<zampdata.records.pb.MegatronBidrequest.RtbLog.Log>();
                mutable_bitField0_ |= 0x00000001;
              }
              logs_.add(input.readMessage(zampdata.records.pb.MegatronBidrequest.RtbLog.Log.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          logs_ = java.util.Collections.unmodifiableList(logs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zampdata.records.pb.MegatronBidrequest.internal_static_megatron_RtbLog_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zampdata.records.pb.MegatronBidrequest.internal_static_megatron_RtbLog_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zampdata.records.pb.MegatronBidrequest.RtbLog.class, zampdata.records.pb.MegatronBidrequest.RtbLog.Builder.class);
    }

    public static com.google.protobuf.Parser<RtbLog> PARSER =
        new com.google.protobuf.AbstractParser<RtbLog>() {
      public RtbLog parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RtbLog(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<RtbLog> getParserForType() {
      return PARSER;
    }

    public interface LogOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required int32 vendor_id = 1;
      /**
       * <code>required int32 vendor_id = 1;</code>
       *
       * <pre>
       *ssp id
       * </pre>
       */
      boolean hasVendorId();
      /**
       * <code>required int32 vendor_id = 1;</code>
       *
       * <pre>
       *ssp id
       * </pre>
       */
      int getVendorId();

      // required int64 log_time = 2;
      /**
       * <code>required int64 log_time = 2;</code>
       *
       * <pre>
       *日志记录时间
       * </pre>
       */
      boolean hasLogTime();
      /**
       * <code>required int64 log_time = 2;</code>
       *
       * <pre>
       *日志记录时间
       * </pre>
       */
      long getLogTime();

      // required string bid_data = 3;
      /**
       * <code>required string bid_data = 3;</code>
       *
       * <pre>
       *request data
       * </pre>
       */
      boolean hasBidData();
      /**
       * <code>required string bid_data = 3;</code>
       *
       * <pre>
       *request data
       * </pre>
       */
      String getBidData();
      /**
       * <code>required string bid_data = 3;</code>
       *
       * <pre>
       *request data
       * </pre>
       */
      com.google.protobuf.ByteString
          getBidDataBytes();

      // optional string response_data = 4;
      /**
       * <code>optional string response_data = 4;</code>
       *
       * <pre>
       *response data
       * </pre>
       */
      boolean hasResponseData();
      /**
       * <code>optional string response_data = 4;</code>
       *
       * <pre>
       *response data
       * </pre>
       */
      String getResponseData();
      /**
       * <code>optional string response_data = 4;</code>
       *
       * <pre>
       *response data
       * </pre>
       */
      com.google.protobuf.ByteString
          getResponseDataBytes();

      // optional string megatron_inner_data = 5;
      /**
       * <code>optional string megatron_inner_data = 5;</code>
       *
       * <pre>
       *megatron inner data 
       * </pre>
       */
      boolean hasMegatronInnerData();
      /**
       * <code>optional string megatron_inner_data = 5;</code>
       *
       * <pre>
       *megatron inner data 
       * </pre>
       */
      String getMegatronInnerData();
      /**
       * <code>optional string megatron_inner_data = 5;</code>
       *
       * <pre>
       *megatron inner data 
       * </pre>
       */
      com.google.protobuf.ByteString
          getMegatronInnerDataBytes();

      // optional string zid = 6;
      /**
       * <code>optional string zid = 6;</code>
       *
       * <pre>
       *zid 
       * </pre>
       */
      boolean hasZid();
      /**
       * <code>optional string zid = 6;</code>
       *
       * <pre>
       *zid 
       * </pre>
       */
      String getZid();
      /**
       * <code>optional string zid = 6;</code>
       *
       * <pre>
       *zid 
       * </pre>
       */
      com.google.protobuf.ByteString
          getZidBytes();
    }
    /**
     * Protobuf type {@code megatron.RtbLog.Log}
     */
    public static final class Log extends
        com.google.protobuf.GeneratedMessage
        implements LogOrBuilder {
      // Use Log.newBuilder() to construct.
      private Log(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Log(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Log defaultInstance;
      public static Log getDefaultInstance() {
        return defaultInstance;
      }

      public Log getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Log(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                vendorId_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                logTime_ = input.readInt64();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                bidData_ = input.readBytes();
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                responseData_ = input.readBytes();
                break;
              }
              case 42: {
                bitField0_ |= 0x00000010;
                megatronInnerData_ = input.readBytes();
                break;
              }
              case 50: {
                bitField0_ |= 0x00000020;
                zid_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zampdata.records.pb.MegatronBidrequest.internal_static_megatron_RtbLog_Log_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zampdata.records.pb.MegatronBidrequest.internal_static_megatron_RtbLog_Log_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zampdata.records.pb.MegatronBidrequest.RtbLog.Log.class, zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder.class);
      }

      public static com.google.protobuf.Parser<Log> PARSER =
          new com.google.protobuf.AbstractParser<Log>() {
        public Log parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Log(input, extensionRegistry);
        }
      };

      @Override
      public com.google.protobuf.Parser<Log> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required int32 vendor_id = 1;
      public static final int VENDOR_ID_FIELD_NUMBER = 1;
      private int vendorId_;
      /**
       * <code>required int32 vendor_id = 1;</code>
       *
       * <pre>
       *ssp id
       * </pre>
       */
      public boolean hasVendorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 vendor_id = 1;</code>
       *
       * <pre>
       *ssp id
       * </pre>
       */
      public int getVendorId() {
        return vendorId_;
      }

      // required int64 log_time = 2;
      public static final int LOG_TIME_FIELD_NUMBER = 2;
      private long logTime_;
      /**
       * <code>required int64 log_time = 2;</code>
       *
       * <pre>
       *日志记录时间
       * </pre>
       */
      public boolean hasLogTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 log_time = 2;</code>
       *
       * <pre>
       *日志记录时间
       * </pre>
       */
      public long getLogTime() {
        return logTime_;
      }

      // required string bid_data = 3;
      public static final int BID_DATA_FIELD_NUMBER = 3;
      private Object bidData_;
      /**
       * <code>required string bid_data = 3;</code>
       *
       * <pre>
       *request data
       * </pre>
       */
      public boolean hasBidData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string bid_data = 3;</code>
       *
       * <pre>
       *request data
       * </pre>
       */
      public String getBidData() {
        Object ref = bidData_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            bidData_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string bid_data = 3;</code>
       *
       * <pre>
       *request data
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBidDataBytes() {
        Object ref = bidData_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          bidData_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string response_data = 4;
      public static final int RESPONSE_DATA_FIELD_NUMBER = 4;
      private Object responseData_;
      /**
       * <code>optional string response_data = 4;</code>
       *
       * <pre>
       *response data
       * </pre>
       */
      public boolean hasResponseData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string response_data = 4;</code>
       *
       * <pre>
       *response data
       * </pre>
       */
      public String getResponseData() {
        Object ref = responseData_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            responseData_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string response_data = 4;</code>
       *
       * <pre>
       *response data
       * </pre>
       */
      public com.google.protobuf.ByteString
          getResponseDataBytes() {
        Object ref = responseData_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          responseData_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string megatron_inner_data = 5;
      public static final int MEGATRON_INNER_DATA_FIELD_NUMBER = 5;
      private Object megatronInnerData_;
      /**
       * <code>optional string megatron_inner_data = 5;</code>
       *
       * <pre>
       *megatron inner data 
       * </pre>
       */
      public boolean hasMegatronInnerData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string megatron_inner_data = 5;</code>
       *
       * <pre>
       *megatron inner data 
       * </pre>
       */
      public String getMegatronInnerData() {
        Object ref = megatronInnerData_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            megatronInnerData_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string megatron_inner_data = 5;</code>
       *
       * <pre>
       *megatron inner data 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMegatronInnerDataBytes() {
        Object ref = megatronInnerData_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          megatronInnerData_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string zid = 6;
      public static final int ZID_FIELD_NUMBER = 6;
      private Object zid_;
      /**
       * <code>optional string zid = 6;</code>
       *
       * <pre>
       *zid 
       * </pre>
       */
      public boolean hasZid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string zid = 6;</code>
       *
       * <pre>
       *zid 
       * </pre>
       */
      public String getZid() {
        Object ref = zid_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            zid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string zid = 6;</code>
       *
       * <pre>
       *zid 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getZidBytes() {
        Object ref = zid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          zid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        vendorId_ = 0;
        logTime_ = 0L;
        bidData_ = "";
        responseData_ = "";
        megatronInnerData_ = "";
        zid_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasVendorId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLogTime()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBidData()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, vendorId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt64(2, logTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getBidDataBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getResponseDataBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, getMegatronInnerDataBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBytes(6, getZidBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, vendorId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, logTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getBidDataBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getResponseDataBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getMegatronInnerDataBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getZidBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static zampdata.records.pb.MegatronBidrequest.RtbLog.Log parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static zampdata.records.pb.MegatronBidrequest.RtbLog.Log parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static zampdata.records.pb.MegatronBidrequest.RtbLog.Log parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static zampdata.records.pb.MegatronBidrequest.RtbLog.Log parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static zampdata.records.pb.MegatronBidrequest.RtbLog.Log parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static zampdata.records.pb.MegatronBidrequest.RtbLog.Log parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static zampdata.records.pb.MegatronBidrequest.RtbLog.Log parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static zampdata.records.pb.MegatronBidrequest.RtbLog.Log parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static zampdata.records.pb.MegatronBidrequest.RtbLog.Log parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static zampdata.records.pb.MegatronBidrequest.RtbLog.Log parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(zampdata.records.pb.MegatronBidrequest.RtbLog.Log prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code megatron.RtbLog.Log}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements zampdata.records.pb.MegatronBidrequest.RtbLog.LogOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return zampdata.records.pb.MegatronBidrequest.internal_static_megatron_RtbLog_Log_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return zampdata.records.pb.MegatronBidrequest.internal_static_megatron_RtbLog_Log_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  zampdata.records.pb.MegatronBidrequest.RtbLog.Log.class, zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder.class);
        }

        // Construct using zampdata.records.pb.MegatronBidrequest.RtbLog.Log.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          vendorId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          logTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          bidData_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          responseData_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          megatronInnerData_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          zid_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return zampdata.records.pb.MegatronBidrequest.internal_static_megatron_RtbLog_Log_descriptor;
        }

        public zampdata.records.pb.MegatronBidrequest.RtbLog.Log getDefaultInstanceForType() {
          return zampdata.records.pb.MegatronBidrequest.RtbLog.Log.getDefaultInstance();
        }

        public zampdata.records.pb.MegatronBidrequest.RtbLog.Log build() {
          zampdata.records.pb.MegatronBidrequest.RtbLog.Log result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public zampdata.records.pb.MegatronBidrequest.RtbLog.Log buildPartial() {
          zampdata.records.pb.MegatronBidrequest.RtbLog.Log result = new zampdata.records.pb.MegatronBidrequest.RtbLog.Log(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.vendorId_ = vendorId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.logTime_ = logTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.bidData_ = bidData_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.responseData_ = responseData_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.megatronInnerData_ = megatronInnerData_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.zid_ = zid_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof zampdata.records.pb.MegatronBidrequest.RtbLog.Log) {
            return mergeFrom((zampdata.records.pb.MegatronBidrequest.RtbLog.Log)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(zampdata.records.pb.MegatronBidrequest.RtbLog.Log other) {
          if (other == zampdata.records.pb.MegatronBidrequest.RtbLog.Log.getDefaultInstance()) return this;
          if (other.hasVendorId()) {
            setVendorId(other.getVendorId());
          }
          if (other.hasLogTime()) {
            setLogTime(other.getLogTime());
          }
          if (other.hasBidData()) {
            bitField0_ |= 0x00000004;
            bidData_ = other.bidData_;
            onChanged();
          }
          if (other.hasResponseData()) {
            bitField0_ |= 0x00000008;
            responseData_ = other.responseData_;
            onChanged();
          }
          if (other.hasMegatronInnerData()) {
            bitField0_ |= 0x00000010;
            megatronInnerData_ = other.megatronInnerData_;
            onChanged();
          }
          if (other.hasZid()) {
            bitField0_ |= 0x00000020;
            zid_ = other.zid_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasVendorId()) {
            
            return false;
          }
          if (!hasLogTime()) {
            
            return false;
          }
          if (!hasBidData()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          zampdata.records.pb.MegatronBidrequest.RtbLog.Log parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (zampdata.records.pb.MegatronBidrequest.RtbLog.Log) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required int32 vendor_id = 1;
        private int vendorId_ ;
        /**
         * <code>required int32 vendor_id = 1;</code>
         *
         * <pre>
         *ssp id
         * </pre>
         */
        public boolean hasVendorId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 vendor_id = 1;</code>
         *
         * <pre>
         *ssp id
         * </pre>
         */
        public int getVendorId() {
          return vendorId_;
        }
        /**
         * <code>required int32 vendor_id = 1;</code>
         *
         * <pre>
         *ssp id
         * </pre>
         */
        public Builder setVendorId(int value) {
          bitField0_ |= 0x00000001;
          vendorId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 vendor_id = 1;</code>
         *
         * <pre>
         *ssp id
         * </pre>
         */
        public Builder clearVendorId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          vendorId_ = 0;
          onChanged();
          return this;
        }

        // required int64 log_time = 2;
        private long logTime_ ;
        /**
         * <code>required int64 log_time = 2;</code>
         *
         * <pre>
         *日志记录时间
         * </pre>
         */
        public boolean hasLogTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int64 log_time = 2;</code>
         *
         * <pre>
         *日志记录时间
         * </pre>
         */
        public long getLogTime() {
          return logTime_;
        }
        /**
         * <code>required int64 log_time = 2;</code>
         *
         * <pre>
         *日志记录时间
         * </pre>
         */
        public Builder setLogTime(long value) {
          bitField0_ |= 0x00000002;
          logTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int64 log_time = 2;</code>
         *
         * <pre>
         *日志记录时间
         * </pre>
         */
        public Builder clearLogTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          logTime_ = 0L;
          onChanged();
          return this;
        }

        // required string bid_data = 3;
        private Object bidData_ = "";
        /**
         * <code>required string bid_data = 3;</code>
         *
         * <pre>
         *request data
         * </pre>
         */
        public boolean hasBidData() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required string bid_data = 3;</code>
         *
         * <pre>
         *request data
         * </pre>
         */
        public String getBidData() {
          Object ref = bidData_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            bidData_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>required string bid_data = 3;</code>
         *
         * <pre>
         *request data
         * </pre>
         */
        public com.google.protobuf.ByteString
            getBidDataBytes() {
          Object ref = bidData_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            bidData_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string bid_data = 3;</code>
         *
         * <pre>
         *request data
         * </pre>
         */
        public Builder setBidData(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          bidData_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string bid_data = 3;</code>
         *
         * <pre>
         *request data
         * </pre>
         */
        public Builder clearBidData() {
          bitField0_ = (bitField0_ & ~0x00000004);
          bidData_ = getDefaultInstance().getBidData();
          onChanged();
          return this;
        }
        /**
         * <code>required string bid_data = 3;</code>
         *
         * <pre>
         *request data
         * </pre>
         */
        public Builder setBidDataBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          bidData_ = value;
          onChanged();
          return this;
        }

        // optional string response_data = 4;
        private Object responseData_ = "";
        /**
         * <code>optional string response_data = 4;</code>
         *
         * <pre>
         *response data
         * </pre>
         */
        public boolean hasResponseData() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string response_data = 4;</code>
         *
         * <pre>
         *response data
         * </pre>
         */
        public String getResponseData() {
          Object ref = responseData_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            responseData_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string response_data = 4;</code>
         *
         * <pre>
         *response data
         * </pre>
         */
        public com.google.protobuf.ByteString
            getResponseDataBytes() {
          Object ref = responseData_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            responseData_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string response_data = 4;</code>
         *
         * <pre>
         *response data
         * </pre>
         */
        public Builder setResponseData(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          responseData_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string response_data = 4;</code>
         *
         * <pre>
         *response data
         * </pre>
         */
        public Builder clearResponseData() {
          bitField0_ = (bitField0_ & ~0x00000008);
          responseData_ = getDefaultInstance().getResponseData();
          onChanged();
          return this;
        }
        /**
         * <code>optional string response_data = 4;</code>
         *
         * <pre>
         *response data
         * </pre>
         */
        public Builder setResponseDataBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          responseData_ = value;
          onChanged();
          return this;
        }

        // optional string megatron_inner_data = 5;
        private Object megatronInnerData_ = "";
        /**
         * <code>optional string megatron_inner_data = 5;</code>
         *
         * <pre>
         *megatron inner data 
         * </pre>
         */
        public boolean hasMegatronInnerData() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string megatron_inner_data = 5;</code>
         *
         * <pre>
         *megatron inner data 
         * </pre>
         */
        public String getMegatronInnerData() {
          Object ref = megatronInnerData_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            megatronInnerData_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string megatron_inner_data = 5;</code>
         *
         * <pre>
         *megatron inner data 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getMegatronInnerDataBytes() {
          Object ref = megatronInnerData_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            megatronInnerData_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string megatron_inner_data = 5;</code>
         *
         * <pre>
         *megatron inner data 
         * </pre>
         */
        public Builder setMegatronInnerData(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          megatronInnerData_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string megatron_inner_data = 5;</code>
         *
         * <pre>
         *megatron inner data 
         * </pre>
         */
        public Builder clearMegatronInnerData() {
          bitField0_ = (bitField0_ & ~0x00000010);
          megatronInnerData_ = getDefaultInstance().getMegatronInnerData();
          onChanged();
          return this;
        }
        /**
         * <code>optional string megatron_inner_data = 5;</code>
         *
         * <pre>
         *megatron inner data 
         * </pre>
         */
        public Builder setMegatronInnerDataBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          megatronInnerData_ = value;
          onChanged();
          return this;
        }

        // optional string zid = 6;
        private Object zid_ = "";
        /**
         * <code>optional string zid = 6;</code>
         *
         * <pre>
         *zid 
         * </pre>
         */
        public boolean hasZid() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string zid = 6;</code>
         *
         * <pre>
         *zid 
         * </pre>
         */
        public String getZid() {
          Object ref = zid_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            zid_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <code>optional string zid = 6;</code>
         *
         * <pre>
         *zid 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getZidBytes() {
          Object ref = zid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            zid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string zid = 6;</code>
         *
         * <pre>
         *zid 
         * </pre>
         */
        public Builder setZid(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          zid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string zid = 6;</code>
         *
         * <pre>
         *zid 
         * </pre>
         */
        public Builder clearZid() {
          bitField0_ = (bitField0_ & ~0x00000020);
          zid_ = getDefaultInstance().getZid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string zid = 6;</code>
         *
         * <pre>
         *zid 
         * </pre>
         */
        public Builder setZidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          zid_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:megatron.RtbLog.Log)
      }

      static {
        defaultInstance = new Log(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:megatron.RtbLog.Log)
    }

    // repeated .megatron.RtbLog.Log logs = 1;
    public static final int LOGS_FIELD_NUMBER = 1;
    private java.util.List<zampdata.records.pb.MegatronBidrequest.RtbLog.Log> logs_;
    /**
     * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
     */
    public java.util.List<zampdata.records.pb.MegatronBidrequest.RtbLog.Log> getLogsList() {
      return logs_;
    }
    /**
     * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
     */
    public java.util.List<? extends zampdata.records.pb.MegatronBidrequest.RtbLog.LogOrBuilder> 
        getLogsOrBuilderList() {
      return logs_;
    }
    /**
     * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
     */
    public int getLogsCount() {
      return logs_.size();
    }
    /**
     * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
     */
    public zampdata.records.pb.MegatronBidrequest.RtbLog.Log getLogs(int index) {
      return logs_.get(index);
    }
    /**
     * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
     */
    public zampdata.records.pb.MegatronBidrequest.RtbLog.LogOrBuilder getLogsOrBuilder(
        int index) {
      return logs_.get(index);
    }

    private void initFields() {
      logs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getLogsCount(); i++) {
        if (!getLogs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < logs_.size(); i++) {
        output.writeMessage(1, logs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < logs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, logs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static zampdata.records.pb.MegatronBidrequest.RtbLog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zampdata.records.pb.MegatronBidrequest.RtbLog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zampdata.records.pb.MegatronBidrequest.RtbLog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zampdata.records.pb.MegatronBidrequest.RtbLog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zampdata.records.pb.MegatronBidrequest.RtbLog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static zampdata.records.pb.MegatronBidrequest.RtbLog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static zampdata.records.pb.MegatronBidrequest.RtbLog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static zampdata.records.pb.MegatronBidrequest.RtbLog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static zampdata.records.pb.MegatronBidrequest.RtbLog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static zampdata.records.pb.MegatronBidrequest.RtbLog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(zampdata.records.pb.MegatronBidrequest.RtbLog prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code megatron.RtbLog}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements zampdata.records.pb.MegatronBidrequest.RtbLogOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zampdata.records.pb.MegatronBidrequest.internal_static_megatron_RtbLog_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zampdata.records.pb.MegatronBidrequest.internal_static_megatron_RtbLog_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zampdata.records.pb.MegatronBidrequest.RtbLog.class, zampdata.records.pb.MegatronBidrequest.RtbLog.Builder.class);
      }

      // Construct using zampdata.records.pb.MegatronBidrequest.RtbLog.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLogsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (logsBuilder_ == null) {
          logs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          logsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zampdata.records.pb.MegatronBidrequest.internal_static_megatron_RtbLog_descriptor;
      }

      public zampdata.records.pb.MegatronBidrequest.RtbLog getDefaultInstanceForType() {
        return zampdata.records.pb.MegatronBidrequest.RtbLog.getDefaultInstance();
      }

      public zampdata.records.pb.MegatronBidrequest.RtbLog build() {
        zampdata.records.pb.MegatronBidrequest.RtbLog result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public zampdata.records.pb.MegatronBidrequest.RtbLog buildPartial() {
        zampdata.records.pb.MegatronBidrequest.RtbLog result = new zampdata.records.pb.MegatronBidrequest.RtbLog(this);
        int from_bitField0_ = bitField0_;
        if (logsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            logs_ = java.util.Collections.unmodifiableList(logs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.logs_ = logs_;
        } else {
          result.logs_ = logsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zampdata.records.pb.MegatronBidrequest.RtbLog) {
          return mergeFrom((zampdata.records.pb.MegatronBidrequest.RtbLog)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zampdata.records.pb.MegatronBidrequest.RtbLog other) {
        if (other == zampdata.records.pb.MegatronBidrequest.RtbLog.getDefaultInstance()) return this;
        if (logsBuilder_ == null) {
          if (!other.logs_.isEmpty()) {
            if (logs_.isEmpty()) {
              logs_ = other.logs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLogsIsMutable();
              logs_.addAll(other.logs_);
            }
            onChanged();
          }
        } else {
          if (!other.logs_.isEmpty()) {
            if (logsBuilder_.isEmpty()) {
              logsBuilder_.dispose();
              logsBuilder_ = null;
              logs_ = other.logs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              logsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLogsFieldBuilder() : null;
            } else {
              logsBuilder_.addAllMessages(other.logs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getLogsCount(); i++) {
          if (!getLogs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zampdata.records.pb.MegatronBidrequest.RtbLog parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zampdata.records.pb.MegatronBidrequest.RtbLog) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .megatron.RtbLog.Log logs = 1;
      private java.util.List<zampdata.records.pb.MegatronBidrequest.RtbLog.Log> logs_ =
        java.util.Collections.emptyList();
      private void ensureLogsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          logs_ = new java.util.ArrayList<zampdata.records.pb.MegatronBidrequest.RtbLog.Log>(logs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          zampdata.records.pb.MegatronBidrequest.RtbLog.Log, zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder, zampdata.records.pb.MegatronBidrequest.RtbLog.LogOrBuilder> logsBuilder_;

      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public java.util.List<zampdata.records.pb.MegatronBidrequest.RtbLog.Log> getLogsList() {
        if (logsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(logs_);
        } else {
          return logsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public int getLogsCount() {
        if (logsBuilder_ == null) {
          return logs_.size();
        } else {
          return logsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public zampdata.records.pb.MegatronBidrequest.RtbLog.Log getLogs(int index) {
        if (logsBuilder_ == null) {
          return logs_.get(index);
        } else {
          return logsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public Builder setLogs(
          int index, zampdata.records.pb.MegatronBidrequest.RtbLog.Log value) {
        if (logsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogsIsMutable();
          logs_.set(index, value);
          onChanged();
        } else {
          logsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public Builder setLogs(
          int index, zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder builderForValue) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.set(index, builderForValue.build());
          onChanged();
        } else {
          logsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public Builder addLogs(zampdata.records.pb.MegatronBidrequest.RtbLog.Log value) {
        if (logsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogsIsMutable();
          logs_.add(value);
          onChanged();
        } else {
          logsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public Builder addLogs(
          int index, zampdata.records.pb.MegatronBidrequest.RtbLog.Log value) {
        if (logsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogsIsMutable();
          logs_.add(index, value);
          onChanged();
        } else {
          logsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public Builder addLogs(
          zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder builderForValue) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.add(builderForValue.build());
          onChanged();
        } else {
          logsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public Builder addLogs(
          int index, zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder builderForValue) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.add(index, builderForValue.build());
          onChanged();
        } else {
          logsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public Builder addAllLogs(
          Iterable<? extends zampdata.records.pb.MegatronBidrequest.RtbLog.Log> values) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          super.addAll(values, logs_);
          onChanged();
        } else {
          logsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public Builder clearLogs() {
        if (logsBuilder_ == null) {
          logs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          logsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public Builder removeLogs(int index) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.remove(index);
          onChanged();
        } else {
          logsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder getLogsBuilder(
          int index) {
        return getLogsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public zampdata.records.pb.MegatronBidrequest.RtbLog.LogOrBuilder getLogsOrBuilder(
          int index) {
        if (logsBuilder_ == null) {
          return logs_.get(index);  } else {
          return logsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public java.util.List<? extends zampdata.records.pb.MegatronBidrequest.RtbLog.LogOrBuilder> 
           getLogsOrBuilderList() {
        if (logsBuilder_ != null) {
          return logsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(logs_);
        }
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder addLogsBuilder() {
        return getLogsFieldBuilder().addBuilder(
            zampdata.records.pb.MegatronBidrequest.RtbLog.Log.getDefaultInstance());
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder addLogsBuilder(
          int index) {
        return getLogsFieldBuilder().addBuilder(
            index, zampdata.records.pb.MegatronBidrequest.RtbLog.Log.getDefaultInstance());
      }
      /**
       * <code>repeated .megatron.RtbLog.Log logs = 1;</code>
       */
      public java.util.List<zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder> 
           getLogsBuilderList() {
        return getLogsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          zampdata.records.pb.MegatronBidrequest.RtbLog.Log, zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder, zampdata.records.pb.MegatronBidrequest.RtbLog.LogOrBuilder> 
          getLogsFieldBuilder() {
        if (logsBuilder_ == null) {
          logsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              zampdata.records.pb.MegatronBidrequest.RtbLog.Log, zampdata.records.pb.MegatronBidrequest.RtbLog.Log.Builder, zampdata.records.pb.MegatronBidrequest.RtbLog.LogOrBuilder>(
                  logs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          logs_ = null;
        }
        return logsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:megatron.RtbLog)
    }

    static {
      defaultInstance = new RtbLog(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:megatron.RtbLog)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_megatron_RtbLog_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_megatron_RtbLog_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_megatron_RtbLog_Log_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_megatron_RtbLog_Log_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\031megatron_bidrequest.proto\022\010megatron\"\253\001" +
      "\n\006RtbLog\022\"\n\004logs\030\001 \003(\0132\024.megatron.RtbLog" +
      ".Log\032}\n\003Log\022\021\n\tvendor_id\030\001 \002(\005\022\020\n\010log_ti" +
      "me\030\002 \002(\003\022\020\n\010bid_data\030\003 \002(\t\022\025\n\rresponse_d" +
      "ata\030\004 \001(\t\022\033\n\023megatron_inner_data\030\005 \001(\t\022\013" +
      "\n\003zid\030\006 \001(\tB\026\n\024zampdata.records.pb"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_megatron_RtbLog_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_megatron_RtbLog_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_megatron_RtbLog_descriptor,
              new String[] { "Logs", });
          internal_static_megatron_RtbLog_Log_descriptor =
            internal_static_megatron_RtbLog_descriptor.getNestedTypes().get(0);
          internal_static_megatron_RtbLog_Log_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_megatron_RtbLog_Log_descriptor,
              new String[] { "VendorId", "LogTime", "BidData", "ResponseData", "MegatronInnerData", "Zid", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
